# -*- coding: utf-8 -*-
"""Final_project_EDA .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CkwNvFn9TbVUN3YsQ5gLc5UqpO3zrDO0
"""



"""<h1><font color = 'orange'>Final Project: EDA - Exploratory Data Analysis<font></h1>"""

# Commented out IPython magic to ensure Python compatibility.
# Them vao cac thu vien
import pandas as pd
import matplotlib as plt
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Hien thi biêu do ngay duoi doan cau lenh
# %matplotlib inline
# In ra man hinh khi them xong thu vien
print('import done!')

"""<h1><font color = '#339966'>1.Input Data<font></h1>"""

# Import data
df = pd.read_csv('/content/file_Walmart_sale_final.csv')
df.head(10)

"""<h1><font color = '#339966'>2.Meta Data<font></h1>"""

# Thong tin chung
df.info()

# Cac cot trong df
df.columns

# Gia tri trong cac cot category
print(df['Store'].unique())
print(df['Store'].nunique())
print("*********")
print(df['Holiday_Flag'].unique())
print(df['Holiday_Flag'].nunique())

"""<h1><font color = '#339966'>3.Data Wrangling<font></h1>"""

# Check missing value
missing_values = df.isnull().sum()
print(f'Missing values: \n {missing_values}')
# Check for duplicate rows
duplicate_rows = df.duplicated().sum()
print(f'Duplicate rows: {duplicate_rows}')

# Recheck for duplicate rows
duplicates = df.duplicated()
duplicate_rows = df[duplicates]
duplicate_count = duplicate_rows.shape[0]
print(f'Number of duplicate rows: {duplicate_count}')
print(duplicate_rows.head())

# Recheck du lieu bi missing
df.isnull().values.any()

# Doi kieu data type voi cot Store and Holiday Flag
df[["Store", "Holiday_Flag"]] = df[["Store", "Holiday_Flag"]].astype('category')
df['N Date'] = pd.to_datetime(df['N Date'])
df.dtypes

# Rename colum
df = df.rename(columns={'Column1':'Index num'})
df.head(20)

"""<h1><font color = '#339966'>4.EDA: Exploratory Data Analysis<font></h1>"""

# Thong ke co ban
df.describe()

# Visualize Histogram của các cột dữ liệu của df
# Tan suat xuat hien cua cac gia tri trong cot
numerical_columns = df.select_dtypes(include=['number']).columns

plt.figure(figsize=(16, 12)) # set lưới
for i, col in enumerate(numerical_columns, 1): # Ham tra ve gia tri trong list, set index bat dau bang 1
    plt.subplot(3, 3, i) # Set bố cục hiển thị
    sns.histplot(df[col], kde=True) # Ve bieu do histogram voi tung cot loai number cua dataframe
    plt.title(f'Histogram of {col}')
plt.tight_layout() # Dieu chinh bieu do de phu hop voi khu vuc hinh
plt.show() # Hien thi bieu do

# Cac Histogram ve Weekly Sales, Temperature, Fuel_Price, CPI, Unemployment_Rate co nhieu yeu to de phan tich
# Histogram ve Index num khong co y nghia phan tich

#visualize phân phối dữ liệu của Categorical bằng boxplot
categorical_columns = df.select_dtypes(include=['category']).columns

plt.figure(figsize=(40, 35)) #Đổi kích thước
for i, col in enumerate(categorical_columns, 1):
    plt.subplot(4, 4, i)
    sns.boxplot(x=col, y='Weekly_Sales', data=df) # Ve bieu do box
    plt.title(f'Box Plot of Weekly Sale vs. {col}')
    plt.xticks(rotation=90,fontsize=12)
    plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu theo tuan cua tung cua hang co su phan hoa va co nhieu gia tri ngoai le<font></h1>
<h1><font color = '#3366FF'>Doanh so cua tuan co ngay le lon hon tuan khong co ngay le va khong co gia tri ngoai le<font></h1>

<h1><font color = '#339966'>Tim hieu cac yeu to anh huong Weekly Sales<font></h1>
"""

# sử dụng Scatter Plots với các Numerical Attributes và Weekly Sales
# numerical_columns da duoc khoi tao trong cau lenh trươc(cot co kieu du lieu la number)
plt.figure(figsize=(16, 12))
for i, col in enumerate(numerical_columns, 1):
    plt.subplot(3, 3, i)
    sns.scatterplot(x=col, y='Weekly_Sales',hue=df['Holiday_Flag'], data=df)
    plt.title(f'Scatter Plot of Weekly Sale vs. {col}')
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'> Ngoai tru Index num(cot so thu tu), cot Weekly_Sales(chinh no) thi cac yeu to khac co tuong quan phan tan voi Weekly_Sales
<font></h1>

"""

# Bar Plots cho các Categorical Attributes với Weekly Sales
plt.figure(figsize=(40, 35)) #Đổi kích thước
for i, col in enumerate(categorical_columns, 1):
    plt.subplot(4, 4, i)
    sns.barplot(x=col, y='Weekly_Sales', data=df, ci=None) # Ve bieu do cot, tat cac thanh bao loi
    plt.title(f'Bar Plot of Weekly Sale vs. {col}')
    plt.xticks(rotation=45,fontsize=12)
    plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()

"""<h5><font color = '#7ED7C1'>Tham chieu
<font></h5>
<h5><font color = '#7ED7C1'>Khong co dau bieu thi tuong quan duong
<font></h5><h5><font color = '#7ED7C1'>Co dau "-" bieu thi tuong quan am
<font></h5>

- |r| từ 0.0 đến 0.1: Tương quan rất yếu hoặc không có tương quan.
- |r| từ 0.1 đến 0.3: Tương quan yếu.
- |r| từ 0.3 đến 0.5: Tương quan trung bình.
- |r| từ 0.5 đến 0.7: Tương quan mạnh.
- |r| từ 0.7 đến 1.0: Tương quan rất mạnh.
"""

# Kiem tra tuong quan
numerical_df = df.select_dtypes(include=['number']) #lọc ra attrib là number
df_corr = numerical_df.corr()
df_corr

# Hoac dung ham de lay cac cot dang number
# df.corr(numeric_only = True)

# # Kiem tra tuong quan
# numerical_df = df.select_dtypes(include=['number']) #lọc ra attrib là number
# df_corr = numerical_df.corr()
# df_corr
# # df_corr['Weekly_Sales'].sort_values(ascending=False)

# # Hoac dung ham de lay cac cot dang number
# # df.corr(numeric_only = True)

# Heatmap bieu hien tuong quan
# df_corr duoc khoi tao the hien tuong quan giua cac cot la so
matrix = np.triu(df_corr)
figure, axis = plt.subplots(figsize=(10,8))

# Danh dau truc x, edit nghieng 45 do
axis.set_xticklabels('', rotation=45)

cmap = sns.color_palette("magma", as_cmap=True)
# Create the heatmap
sns.heatmap(df_corr,mask = matrix, annot=True, cmap=cmap, fmt=".2f", linewidths=0.5, vmin=-1, vmax=1)

# Dat ten heatmap
title = 'TUONG QUAN\nDU LIEU THANH PHAN (NUMERICAL)\n'
axis.set_title(title, loc='left',fontsize=18)

# Hien thi bieu do
plt.show()

"""<h1><font color = '#3366FF'>Weekly Sales co tuong quan nghich rat yeu voi Unemployment<font></h1>
<h1><font color = '#3366FF'>Temperature co tuong quan thuan rat yeu voi Fuel Price, CPI, Unemployment<font></h1>
<h1><font color = '#3366FF'>Fuel Price co tuong quan nghich rat yeu voi CPI<font></h1>
<h1><font color = '#3366FF'>CPI co tuong quan nghich yeu voi Unemployment<font></h1>
<h1><font color = '#3366FF'>Chi so Temperature cung tuong quan yeu voi cac chi so con lai<font></h1>
<h1><font color = '#3366FF'>->Co the cac yeu to nay can thoi gian de the hien tac dong<font></h1>

<h1><font color = '#339966'>Phan tich theo cac yeu to gia dinh<font></h1>
"""

df.head(10)

# Su dung ham de tach cot N Date thanh cot Month of Year
# ham period() khoang thoi gian
df['Month_of_Year'] = pd.to_datetime(df['N Date']).dt.to_period('M')
df['Day'] = df['N Date'].dt.day
df['Month'] = df['N Date'].dt.month
df['Year'] = df['N Date'].dt.year
df = df.drop(columns=['Day'])
df.head()

"""<h1><font color = '#339966'>a.Phan tich theo tinh trung binh theo tuan cua cac chi so<font></h1>

"""

df_correlation = df.groupby('Month_of_Year').agg({'CPI':'mean','Unemployment':'mean','Weekly_Sales':'mean','Fuel_Price':'mean','Temperature':'mean'}).reset_index()
df_Month = df_correlation['Month_of_Year'].unique()
df_correlation

# column_sums = df_correlation[['CPI','Unemployment','Weekly_Sales','Fuel_Price','Temperature']].sum(axis=0)
# print("Column sums:")
# print(column_sums)
# Tuong quan cac chi so vi mo sau khi trung binh hoa du lieu
# .style.background_gradient()
df_corre = df_correlation[['CPI','Unemployment','Fuel_Price','Temperature','Weekly_Sales']].corr()
df_corre

matrix_corr = np.triu(df_corre)
figure, axis = plt.subplots(figsize=(10,8))

# Danh dau truc x, edit nghieng 45 do
axis.set_xticklabels('', rotation=45)

cmap = sns.color_palette("magma", as_cmap=True)
# Create the heatmap
sns.heatmap(df_corre, mask=matrix_corr, annot=True, cmap=cmap, fmt=".2f", linewidths=0.5, vmin=-1, vmax=1)

# Dat ten heatmap
title = 'TUONG QUAN SAU TINH TRUNG BINH\nDU LIEU THANH PHAN (NUMERICAL)\n'
axis.set_title(title, loc='left',fontsize=18)

# Hien thi bieu do
plt.show()

"""<h1><font color = '#3366FF'>Sau khi tinh trung binh tuan theo tung thang:<font></h1>
<h1><font color = '#3366FF'>Chi so Weekly_Sales tuong quan rat yeu voi hau het cac chi so, rieng co Temperature thi tuong quan nghich yeu<font></h1>
<h1><font color = '#3366FF'>Chi so CPI tuong quan thuan rat manh voi chi so Fuel_Price va nguoc lai rat manh voi chi so Unemployment<font></h1>
<h1><font color = '#3366FF'>Dan den chi so Fuel_Price cung tuong quan nghich rat manh voi chi so Unemployment<font></h1>
<h1><font color = '#3366FF'>Chi so Temperature cung tuong quan yeu voi cac chi so con lai<font></h1>

"""

# Ve bieu do duong voi truc x là trung binh gia nhien lieu, truc y la trung binh doanh so
# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(x=x_axis, y='Weekly_Sales', data=df_correlation, color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(x=x_axis, y='Fuel_Price', data=df_correlation, marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(0, 1.5*1e6)
ax2.set_ylim(2.0, 4.5)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales and Avg Weekly Fuel Price",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Fuel_Price', color='r')

# Hien thi bieu do
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Chi so trung binh theo tuan Fuel_Price co xu huong giam theo thoi gian<font></h1>
<h1><font color = '#3366FF'>Chi so trung binh theo tuan Weekly_Sales khong co anh huong boi Fuel_Price trung binh va kha tuong dong qua cac nam<font></h1>
"""

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(x=x_axis, y='Weekly_Sales', data=df_correlation, color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = plt.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(x=x_axis, y='CPI', data=df_correlation, marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(0, 1.5*1e6)
ax2.set_ylim(160,200)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales and Avg Weekly CPI ",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_CPI', color='r')

# Hien thi bieu do
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Chi so trung binh theo tuan CPI co xu huong tăng theo thoi gian<font></h1>
<h1><font color = '#3366FF'>Chi so trung binh theo tuan Weekly_Sales voi CPI cung khong co anh huong nhieu<font></h1>

"""

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(x=x_axis, y='Weekly_Sales', data=df_correlation, color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(x=x_axis, y='Unemployment', data=df_correlation, marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(0, 1.5*1e6)
ax2.set_ylim(6.5, 9)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales and Avg Weekly Unemployment for Month",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Unemployment', color='r')

# Hien thi bieu do
plt.show()

"""<h1><font color = '#3366FF'>Chi so Unemployment trung binh giam theo thơi gian<font></h1>
<h1><font color = '#3366FF'>Doanh thu trung binh tuan theo thang va chi so Unemployment trung binh khong co nhieu tuong quan<font></h1>

"""

#*******
# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='Weekly_Sales', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Temperature', marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(0, 1.5*1e6)
ax2.set_ylim(30, 90)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales and Avg Weekly Temperature for Month",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Temperature', color='r')

# Hien thi bieu do
plt.show()

"""<h1><font color = '#3366FF'>Chi so trung binh theo tuan Temperature co tinh chu ky <font></h1>"""

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='CPI', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Unemployment', marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(150, 200)
ax2.set_ylim(6.5, 9.0)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_CPI")
plt.title("Avg_Weekly_CPI voi Avg_Weekly_Unemploymet",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Unemployment', color='r')

# Hien thi bieu do
plt.show()

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='CPI', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Fuel_Price', marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
axis.set_ylim(150, 200)
# ax2.set_ylim(30, 90)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_CPI")
plt.title("Avg_Weekly_CPI voi Avg_Weekly_Fuel_Price",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Fuel_Price', color='r')

# Hien thi bieu do
plt.show()

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='Fuel_Price', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Unemployment', marker='o', color='red', ax = ax2)


# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Fuel_Price")
plt.title("Avg_Weekly_Fuel_Price voi Avg_Weekly_Unemploymet",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Unemployment', color='r')

# Hien thi bieu do
plt.show()

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='Fuel_Price', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Temperature', marker='o', color='red', ax = ax2)

# Dat gioi han cho cac truc
# axis.set_ylim(150, 200)
# ax2.set_ylim(30, 90)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Fuel_Price")
plt.title("Avg_Weekly_Fuel_Price voi Avg_Weekly_Temperature",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Temperature', color='r')

# Hien thi bieu do
plt.show()

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='CPI', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Temperature', marker='o', color='red', ax = ax2)


# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_CPI")
plt.title("Avg_Weekly_CPI voi Avg_Weekly_Temperature",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Temperature', color='r')

# Hien thi bieu do
plt.show()

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_Month))

# Danh dau truc x voi tung gia tri cua thang, edit nghieng 45 do
plt.xticks(x_axis, df_Month, rotation = 45)

# Create the bar plot
sns.barplot(data=df_correlation, x=x_axis, y='Unemployment', color='#00FFFF', ax = axis)
# Overlay the line plot
ax2 = axis.twinx() # Tao he gia tri moi cho cot dung trong bieu do moi(ghi de len bieu do cu)
sns.lineplot(data=df_correlation, x=x_axis, y='Temperature', marker='o', color='red', ax = ax2)


# Dat ten cac truc trong bieu do
axis.set_xlabel("Month of Year")
axis.set_ylabel("Avg_Weekly_Unemployment")
plt.title("Avg_Weekly_Unemployment voi Avg_Weekly_Temperature",color="#3366FF")

ax2.tick_params('y', color='r')
ax2.set_ylabel('Avg_Weekly_Temperature', color='r')

# Hien thi bieu do
plt.show()

"""<h1><font color = '#339966'>b.Phan tich doanh thu theo trung binh theo su tang/giam cac chi so Numeric<font></h1>

"""

#********
# Tinh delta gia nhien lieu va phan loại
# Lay doanh thu tuan dau tien lam tham chieu
# Voi datatype la object thi khong kiem tra tuong quan bang ham corr()
df['Delta_Fuel_Price'] = df['Fuel_Price'].diff()
types = []
for delta in df['Delta_Fuel_Price']:
  if delta < 0:
    types.append('Giam')
  elif delta > 0:
    types.append('Tang')
  else:
    types.append('Khong doi')
df['Delta_Fuel_Price'] = types
# Tao df giua loai delta gia nhien lieu voi trung binh doanh thu
df_11 = df.groupby('Delta_Fuel_Price').agg({'Weekly_Sales': 'mean'}).reset_index()
df_11 = df_11.round({'Weekly_Sales': 2})
df_11 = df_11[df_11['Delta_Fuel_Price'] != 'Khong doi']
df_11.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sales'}, inplace=True)

# Khoi tao luoi va cac truc
figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_11['Delta_Fuel_Price']))

# Danh dau truc x voi tung gia tri cua thang
plt.xticks(x_axis, df_11['Delta_Fuel_Price'])

# Create the bar plot
sns.barplot(x=x_axis, y=df_11['Avg_Weekly_Sales'], data=df_11, palette='Set2', ax = axis)

# Dat gioi han cho cac truc
axis.set_ylim(1.02*1e6, 1.06*1e6)

# Dat ten cac truc trong bieu do
axis.set_xlabel("Type of Delta")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales for Type Delta Fuel",color="#3366FF")

rects = axis.patches
# Make some labels.
labels = df_11['Avg_Weekly_Sales']

for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )

# Hien thi bieu do
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Khi gia nhien lieu giam thi doanh thu trung binh theo tuan cao hon, muc do anh huong cung kha nhieu<font></h1>"""

# Tinh delta chi so CPI va phan loại
df['Delta_CPI'] = df['CPI'].diff()
type1s = []
for delta in df['Delta_CPI']:
  if delta < 0:
    type1s.append('Giam')
  elif delta > 0:
    type1s.append('Tang')
  else:
    type1s.append('Khong doi')
df['Delta_CPI'] = type1s

df_12 = df.groupby('Delta_CPI').agg({'Weekly_Sales': 'mean'}).reset_index()
df_12 = df_12.round({'Weekly_Sales': 2})
df_12 = df_12[df_12['Delta_CPI'] != 'Khong doi']
df_12.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sales'}, inplace=True)

figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_12['Delta_CPI']))

plt.xticks(x_axis, df_12['Delta_CPI'])

sns.barplot(x=x_axis, y=df_12['Avg_Weekly_Sales'], data=df_12, palette='Set2', ax = axis)

axis.set_ylim(1.02*1e6, 1.06*1e6)
axis.set_xlabel("Type of Delta")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales for Type Delta CPI",color="#3366FF")

rects = axis.patches
labels = df_12['Avg_Weekly_Sales']
for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu trung binh theo tuan tang khi chi so CPI tang nhung muc tang khong nhieu<font></h1>

"""

# Tinh delta chi so that nghiep va phan loai
# Lay doanh thu tuan dau tien lam tham chieu
df['Delta_Unemployment'] = df['Unemployment'].diff()
type2s = []
for delta in df['Delta_Unemployment']:
  if delta < 0:
    type2s.append('Giam')
  elif delta > 0:
    type2s.append('Tang')
  else:
    type2s.append('Khong doi')
df['Delta_Unemployment'] = type2s

df_13 = df.groupby('Delta_Unemployment').agg({'Weekly_Sales': 'mean'}).reset_index()
df_13 = df_13.round({'Weekly_Sales': 2})
df_13 = df_13[df_13['Delta_Unemployment'] != 'Khong doi']
df_13.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sales'}, inplace=True)

figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_13['Delta_Unemployment']))
plt.xticks(x_axis, df_13['Delta_Unemployment'])

sns.barplot(x=x_axis, y=df_13['Avg_Weekly_Sales'], data=df_13, palette='Set2', ax = axis)

axis.set_ylim(1.02*1e6, 1.06*1e6)
axis.set_xlabel("Type of Delta")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales for Type Delta Unemployment",color="#3366FF")

rects = axis.patches
labels = df_13['Avg_Weekly_Sales']
for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu trung binh theo tuan tang khi chi so Unemployment giam, nhung cung khong anh huong nhieu<font></h1>


"""

# Tinh delta nhiet do trung binh va phan loại
# Lay doanh thu tuan dau tien lam tham chieu
df['Delta_Temperature'] = df['Temperature'].diff()
type3s = []
for delta in df['Delta_Temperature']:
  if delta < 0:
    type3s.append('Giam')
  elif delta > 0:
    type3s.append('Tang')
  else:
    type3s.append('Khong doi')
df['Delta_Temperature'] = type3s

df_14 = df.groupby('Delta_Temperature').agg({'Weekly_Sales': 'mean'}).reset_index()
df_14 = df_14.round({'Weekly_Sales': 2})
df_14 = df_14[df_14['Delta_Temperature'] != 'Khong doi']
df_14.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sales'}, inplace=True)

figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_14['Delta_Temperature']))
plt.xticks(x_axis, df_14['Delta_Temperature'])

sns.barplot(x=x_axis, y=df_14['Avg_Weekly_Sales'], data=df_14, palette='Set2', ax = axis)

axis.set_ylim(1.02*1e6, 1.06*1e6)
axis.set_xlabel("Type of Delta")
axis.set_ylabel("Avg_Weekly_Sales")
plt.title("Avg Weekly Sales for Type Delta Temperature",color="#3366FF")

rects = axis.patches
labels = df_14['Avg_Weekly_Sales']
for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Khi nhiet do thay doi khong anh huong nhieu toi doanh thu trung binh theo tuan<font></h1>

<h1><font color = '#339966'>c.Phan tich doanh thu trung binh voi cac yeu to Category<font></h1>
"""

# Tao df
df_avg_sales = df.groupby(['Month','Year']).agg({'Weekly_Sales': 'mean'}).reset_index()

# Ve bieu do
plt.figure(figsize=(12, 6))
sns.lineplot(data=df_avg_sales, x='Month', y='Weekly_Sales',hue='Year', marker='o', palette='Set2')
# Dat ten truc
plt.xlabel('Month')
plt.ylabel('Avg Weekly Sales') # using Avg sales for better comparison
plt.title('Avg Weekly Sale for Month',color="#3366FF")
plt.xticks(range(1, 13), ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])

plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu trung binh cac nam tuong doi deu, tang manh vao thang cuoi nam<font></h1>

"""

# Tao df
df_sale_for_holiday = df.groupby(['Holiday_Flag']).agg({'Weekly_Sales': 'mean'}).reset_index()
df_sale_for_holiday.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sales'}, inplace=True)
df_sale_for_holiday = df_sale_for_holiday.round({'Avg_Weekly_Sales': 2})
df_sale_for_holiday = df_sale_for_holiday.fillna(0)

# Ve bieu do
labels = df_sale_for_holiday['Holiday_Flag']
sizes = df_sale_for_holiday['Avg_Weekly_Sales']

fig, ax = plt.subplots(figsize=(6, 6))

plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
# Title cua bieu do and name axis
plt.title('Ty trong Avg Weekly Sales for Holiday_Flag',color="#3366FF")
plt.legend(title='Holiday_Flag')
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu trung binh cua cac tuan co ngay le cao hon tuan chi co ngay ngay thuong<font></h1>

"""

# Tao df
df_sale_holiday = df.groupby(['Year','Holiday_Flag']).agg({'Weekly_Sales': 'mean'}).reset_index()
df_sale_holiday.rename(columns={'Weekly_Sales': 'Avg_Weekly_Sale'}, inplace=True)
df_sale_holiday = df_sale_holiday.round({'Avg_Weekly_Sale': 2})
df_sale_holiday = df_sale_holiday.fillna(0)

# Ve bieu do
figure, axis = plt.subplots(figsize=(12, 6))

sns.lineplot(x='Year', y='Avg_Weekly_Sale', hue='Holiday_Flag', data=df_sale_holiday, palette='Set2', marker='o', color='red')
axis.set_xticks(range(2010,2013,1))
# Dat ten truc
axis.set_ylim(1.02*1e6, 1.16*1e6)
axis.set_xlabel("Year")
axis.set_ylabel("Avg_Weekly_Sale")
plt.title("Avg Weekly Sales for Holiday Flag",color="#3366FF")

# Hien thi values tren line plot
for x,y in zip(df_sale_holiday['Year'], df_sale_holiday['Avg_Weekly_Sale']):
    label = "{:.2f}".format(y)
    plt.annotate(label, # this is the text
                 (x,y), # this is the point to label
                 textcoords="offset points", # how to position the text
                 xytext=(0,10), # distance from text to points (x,y)
                 ha='center')
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Doanh thu trung binh cua cac tuan co ngay le cung cao hon tuan binh thuong o cac nam, vao nam 2011 thi chenh lech tang kha nhieu<font></h1>

"""

# Tong doanh so theo store
# Bieu do the hien thong tin top 5 store co daonh thu cao nhat
df_sale_for_store = df.groupby(['Store']).agg({'Weekly_Sales': 'mean'}).reset_index()
df_sale_for_store.rename(columns={'Weekly_Sales': 'Avg_Sales'}, inplace=True)
df_sale_for_store = df_sale_for_store.round({'Avg_Sales': 2})
df_sale_for_store.sort_values(by='Avg_Sales', ascending=False, inplace=True)
df_sale_for_store_max = df_sale_for_store.head(3)

figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_sale_for_store_max['Store']))
plt.xticks(x_axis, df_sale_for_store_max['Store'])

sns.barplot(data=df_sale_for_store_max, x=x_axis, y='Avg_Sales', palette="blend:#7AB,#EDA", ax = axis)

axis.set_ylim(0, 2.4*1e6)
axis.set_xlabel("Store")
axis.set_ylabel("Avg_Sales")
plt.title("Top 3 store avg max sale ",color="#3366FF")

# Hien thi values tren cac cot
rects = axis.patches
labels = df_sale_for_store_max['Avg_Sales']
for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Top 3 cua hang co doanh thu trung binh cao nhat<font></h1>

"""

# Bieu do the hien top 5 cua hang co doanh thu thap nhat
df_sale_for_store_min = df_sale_for_store.tail(5)

figure, axis = plt.subplots(figsize=(12, 6))
x_axis = np.arange(len(df_sale_for_store_min['Store']))
plt.xticks(x_axis, df_sale_for_store_min['Store'])

sns.barplot(x=x_axis, y=df_sale_for_store_min['Avg_Sales'], data=df_sale_for_store_min, palette="blend:#7AB,#EDA", ax = axis)

axis.set_xlabel("Store")
axis.set_ylabel("Avg_Sales")
plt.title("Top 5 Store avg min sale ",color="#3366FF")

# Hien thi values tren cac cot
rects = axis.patches
labels = df_sale_for_store_min['Avg_Sales']
for rect, label in zip(rects, labels):
    height = rect.get_height()
    axis.text(
        rect.get_x() + rect.get_width() / 2, height , label, ha="center", va="bottom"
    )
plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Top 5 cua hang co doanh thu trung binh thap nhat<font></h1>

"""

df_sale_for_store = df.groupby(['Store','Holiday_Flag']).agg({'Weekly_Sales': 'mean'}).reset_index()
df_sale_for_store.rename(columns={'Weekly_Sales': 'Avg_Sales'}, inplace=True)
df_sale_for_store = df_sale_for_store.round({'Avg_Sales': 2})
df_sale_for_store.sort_values(by='Avg_Sales', ascending=False, inplace=True)

figure, axis = plt.subplots(figsize=(12, 6))
# x_axis = np.arange(len(df_sale_for_store['Store']))
# plt.xticks(x_axis, df_sale_for_store['Store'], rotation=45)

sns.barplot(data=df_sale_for_store, x='Store', y='Avg_Sales', hue='Holiday_Flag', palette="blend:#7AB,#EDA", ax = axis)

axis.set_ylim(0, 2.4*1e6)
axis.set_xlabel("Store")
axis.set_ylabel("Avg_Sales")
plt.title("Avg sale Store for Holiday_Flag ",color="#3366FF")

plt.tight_layout()
plt.show()

"""<h1><font color = '#3366FF'>Hau het cac cua hang co doanh thu trung binh cao hon vao cac tuan co ngay le, nhung o cac cua hang so 30,33,36,37,38,44 thi doanh thu trung binh cua tuan co ngay le chi bang hoac thap hon<font></h1>

"""

